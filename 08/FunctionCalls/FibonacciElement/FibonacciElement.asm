	@256
	D=A
	@SP
	M=D
	@Sys.init.0.returnAddress
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@LCL
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@ARG
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@THIS
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@THAT
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@SP
	D=M
	@5
	D=D-A
	@0
	D=D-A
	@ARG
	M=D
	@SP
	D=M
	@LCL
	M=D
	@Sys.init
	0;JMP
(Sys.init.0.returnAddress)
(Main.fibonacci)
	@0
	D=A
	@Main.fibonacci.InitializeEnd
	D;JEQ
(Main.fibonacci.Initialize)
	D=D-1
	@SP
	A=M
	M=0
	@SP
	M=M+1
	@Main.fibonacci.Initialize
	D;JNE
(Main.fibonacci.InitializeEnd)
	@0
	D=A
	@ARG
	A=M+D
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@2
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@SP
	M=M-1
	A=M
	D=M
	@SP
	M=M-1
	A=M
	D=M-D
	@Jump0
	D;JLT
	@SP
	A=M
	M=0
	@End0
	0;JMP
(Jump0)
	@SP
	A=M
	M=-1
(End0)
	@SP
	M=M+1
	@SP
	M=M-1
	A=M
	D=M
	@Main.fibonacci$IF_TRUE
	D;JNE
	@Main.fibonacci$IF_FALSE
	0;JMP
(Main.fibonacci$IF_TRUE)
	@0
	D=A
	@ARG
	A=M+D
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@LCL
	D=M
	@R15
	M=D
	@5
	A=D-A
	D=M
	@R14
	M=D
	@SP
	M=M-1
	A=M
	D=M
	@ARG
	A=M
	M=D
	@ARG
	D=M+1
	@SP
	M=D
	@R15
	A=M
	A=A-1
	D=M
	@THAT
	M=D
	@R15
	A=M
	A=A-1
	A=A-1
	D=M
	@THIS
	M=D
	@R15
	A=M
	A=A-1
	A=A-1
	A=A-1
	D=M
	@ARG
	M=D
	@R15
	A=M
	A=A-1
	A=A-1
	A=A-1
	A=A-1
	D=M
	@LCL
	M=D
	@R14
	A=M
	0;JMP
(Main.fibonacci$IF_FALSE)
	@0
	D=A
	@ARG
	A=M+D
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@2
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@SP
	M=M-1
	A=M
	D=M
	@SP
	M=M-1
	A=M
	M=M-D
	@SP
	M=M+1
	@Main.fibonacci.1.returnAddress
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@LCL
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@ARG
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@THIS
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@THAT
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@SP
	D=M
	@5
	D=D-A
	@1
	D=D-A
	@ARG
	M=D
	@SP
	D=M
	@LCL
	M=D
	@Main.fibonacci
	0;JMP
(Main.fibonacci.1.returnAddress)
	@0
	D=A
	@ARG
	A=M+D
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@1
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@SP
	M=M-1
	A=M
	D=M
	@SP
	M=M-1
	A=M
	M=M-D
	@SP
	M=M+1
	@Main.fibonacci.2.returnAddress
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@LCL
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@ARG
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@THIS
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@THAT
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@SP
	D=M
	@5
	D=D-A
	@1
	D=D-A
	@ARG
	M=D
	@SP
	D=M
	@LCL
	M=D
	@Main.fibonacci
	0;JMP
(Main.fibonacci.2.returnAddress)
	@SP
	M=M-1
	A=M
	D=M
	@SP
	M=M-1
	A=M
	M=M+D
	@SP
	M=M+1
	@LCL
	D=M
	@R15
	M=D
	@5
	A=D-A
	D=M
	@R14
	M=D
	@SP
	M=M-1
	A=M
	D=M
	@ARG
	A=M
	M=D
	@ARG
	D=M+1
	@SP
	M=D
	@R15
	A=M
	A=A-1
	D=M
	@THAT
	M=D
	@R15
	A=M
	A=A-1
	A=A-1
	D=M
	@THIS
	M=D
	@R15
	A=M
	A=A-1
	A=A-1
	A=A-1
	D=M
	@ARG
	M=D
	@R15
	A=M
	A=A-1
	A=A-1
	A=A-1
	A=A-1
	D=M
	@LCL
	M=D
	@R14
	A=M
	0;JMP
(Sys.init)
	@0
	D=A
	@Sys.init.InitializeEnd
	D;JEQ
(Sys.init.Initialize)
	D=D-1
	@SP
	A=M
	M=0
	@SP
	M=M+1
	@Sys.init.Initialize
	D;JNE
(Sys.init.InitializeEnd)
	@4
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@Main.fibonacci.3.returnAddress
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@LCL
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@ARG
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@THIS
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@THAT
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@SP
	D=M
	@5
	D=D-A
	@1
	D=D-A
	@ARG
	M=D
	@SP
	D=M
	@LCL
	M=D
	@Main.fibonacci
	0;JMP
(Main.fibonacci.3.returnAddress)
(Sys.init$WHILE)
	@Sys.init$WHILE
	0;JMP
(END_INFINIT_LOOP)
	@END_INFINIT_LOOP
	0;JMP
